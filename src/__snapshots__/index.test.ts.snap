// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Assignment Operators can process increment operator += 1`] = `
Array [
  Object {
    "name": "calculateDiscount",
    "operator": ">=",
    "parseResult": Object {
      "lhs": "price",
      "lhsv": 100,
      "rhs": "100",
      "rhsv": 100,
    },
    "result": true,
    "rule": "price >= 100",
    "state": "{\\"price\\":100,\\"discount\\":10}",
    "stepCount": 1,
    "stepRow": 0,
  },
  Object {
    "name": "calculateDiscount",
    "operator": "+=",
    "parseResult": Object {
      "lhs": "discount",
      "lhsv": 30,
      "rhs": "20",
      "rhsv": 20,
    },
    "result": Object {
      "discount": 30,
      "price": 100,
    },
    "rule": "discount += 20",
    "state": "{\\"price\\":100,\\"discount\\":30}",
    "stepCount": 2,
    "stepRow": 0,
  },
]
`;

exports[`Custom Functions can use CONTAINS array function 1`] = `Array []`;

exports[`Custom Functions can use functional array helpers 1`] = `Array []`;

exports[`Custom Functions can use functions as expressions 1`] = `"2020-01-20T00:10:00.000Z"`;

exports[`Logical and/or can process 'and' rules 1`] = `Array []`;

exports[`Logical and/or can process 'or' rules 1`] = `Array []`;

exports[`Logical and/or can process nested logical rule arrays 1`] = `Array []`;

exports[`Logical if/then/else can process 'then' rules 1`] = `Array []`;

exports[`Logical if/then/else can process omitted 'else' rules 1`] = `Array []`;

exports[`Logical if/then/else can process series of if/then rules 1`] = `Array []`;

exports[`Nested Rule Structures can process complex rule expressions 1`] = `Array []`;
